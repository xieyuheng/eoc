000 (program () (iadd 1 (iadd (random-dice) 1)))
010 (program () (iadd 1 (iadd (random-dice) 1)))
020 (program () (let ((_₁ (random-dice))) (let ((_₂ (iadd _₁ 1))) (iadd 1 _₂))))
030 (c-program (:ctx (:_₁ int-t :_₂ int-t)) (:start ((= _₁ (random-dice)) (= _₂ (iadd _₁ 1)) (return (iadd 1 _₂)))))
040 (x86-program (:ctx (:_₁ int-t :_₂ int-t)) (:start (() ((callq random_dice 0) (movq %rax _₁) (movq _₁ _₂) (addq $1 _₂) (movq $1 %rax) (addq _₂ %rax) (jmp epilog)))))
050 (x86-program (:ctx (:_₁ int-t :_₂ int-t)) (:start (() ((callq random_dice 0) (movq %rax (deref %rbp -8)) (movq (deref %rbp -8) (deref %rbp -16)) (addq $1 (deref %rbp -16)) (movq $1 %rax) (addq (deref %rbp -16) %rax) (jmp epilog)))))
060 (x86-program (:ctx (:_₁ int-t :_₂ int-t)) (:start (() ((callq random_dice 0) (movq %rax (deref %rbp -8)) (movq (deref %rbp -8) %rax) (movq %rax (deref %rbp -16)) (addq $1 (deref %rbp -16)) (movq $1 %rax) (addq (deref %rbp -16) %rax) (jmp epilog)))))
070 (x86-program (:ctx (:_₁ int-t :_₂ int-t)) (:start (() ((callq random_dice 0) (movq %rax (deref %rbp -8)) (movq (deref %rbp -8) %rax) (movq %rax (deref %rbp -16)) (addq $1 (deref %rbp -16)) (movq $1 %rax) (addq (deref %rbp -16) %rax) (jmp epilog))) :begin (() ((pushq %rbp) (movq %rsp %rbp) (subq $16 %rsp) (jmp start))) :epilog (() ((addq $16 %rsp) (popq %rbp) (retq)))))

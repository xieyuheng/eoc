000 (program () (let ((x (let ((x 4)) (iadd x 1)))) (iadd x 2)))
001 (program () 7)
010 (program () 7)
020 (program () 7)
030 (c-program (:ctx ()) (:start ((return 7))))
040 (x86-program (:ctx ()) (:start (() ((movq $7 %rax) (jmp epilog)))))
050 (x86-program (:ctx ()) (:start (() ((movq $7 %rax) (jmp epilog)))))
060 (x86-program (:ctx ()) (:start (() ((movq $7 %rax) (jmp epilog)))))
070 (x86-program (:ctx ()) (:start (() ((movq $7 %rax) (jmp epilog))) :begin (() ((pushq %rbp) (movq %rsp %rbp) (subq $16 %rsp) (jmp start))) :epilog (() ((addq $16 %rsp) (popq %rbp) (retq)))))

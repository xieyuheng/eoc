program:

  (program () (iadd (iadd (iadd (iadd (random-dice) 1) 1) 1) 1))

uniquify:

  (program () (iadd (iadd (iadd (iadd (random-dice) 1) 1) 1) 1))

remove-complex-operands:

  (program () (let ((_₁ (random-dice))) (let ((_₂ (iadd _₁ 1))) (let ((_₃ (iadd _₂ 1))) (let ((_₄ (iadd _₃ 1))) (iadd _₄ 1))))))

explicate-control:

  (c-program () (:start ((= _₁ (random-dice)) (= _₂ (iadd _₁ 1)) (= _₃ (iadd _₂ 1)) (= _₄ (iadd _₃ 1)) (return (iadd _₄ 1)))))

select-instructions:

  [#cons-x86-program [:ctx [:_₁ #int-t :_₂ #int-t :_₃ #int-t :_₄ #int-t]] [:start [#cons-block [] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₁]]] ['movq [[#var-rand '_₁] [#var-rand '_₂]]] ['addq [[#imm-rand 1] [#var-rand '_₂]]] ['movq [[#var-rand '_₂] [#var-rand '_₃]]] ['addq [[#imm-rand 1] [#var-rand '_₃]]] ['movq [[#var-rand '_₃] [#var-rand '_₄]]] ['addq [[#imm-rand 1] [#var-rand '_₄]]] ['movq [[#var-rand '_₄] [#reg-rand 'rax]]] ['addq [[#imm-rand 1] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

uncover-live:

  [#cons-x86-program [:ctx [:_₁ #int-t :_₂ #int-t :_₃ #int-t :_₄ #int-t]] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₁]]] ['movq [[#var-rand '_₁] [#var-rand '_₂]]] ['addq [[#imm-rand 1] [#var-rand '_₂]]] ['movq [[#var-rand '_₂] [#var-rand '_₃]]] ['addq [[#imm-rand 1] [#var-rand '_₃]]] ['movq [[#var-rand '_₃] [#var-rand '_₄]]] ['addq [[#imm-rand 1] [#var-rand '_₄]]] ['movq [[#var-rand '_₄] [#reg-rand 'rax]]] ['addq [[#imm-rand 1] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

build-interference:

  [#cons-x86-program [:ctx [:_₁ #int-t :_₂ #int-t :_₃ #int-t :_₄ #int-t]] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} [#reg-rand 'rcx] {[#reg-rand 'rsp]} [#reg-rand 'rdx] {[#reg-rand 'rsp]} [#reg-rand 'rsi] {[#reg-rand 'rsp]} [#reg-rand 'rdi] {[#reg-rand 'rsp]} [#reg-rand 'r8] {[#reg-rand 'rsp]} [#reg-rand 'r9] {[#reg-rand 'rsp]} [#reg-rand 'r10] {[#reg-rand 'rsp]} [#reg-rand 'r11] {[#reg-rand 'rsp]} [#var-rand '_₁] {[#reg-rand 'rsp]} [#var-rand '_₂] {[#reg-rand 'rsp]} [#var-rand '_₃] {[#reg-rand 'rsp]} [#var-rand '_₄] {[#reg-rand 'rsp]})]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₁]]] ['movq [[#var-rand '_₁] [#var-rand '_₂]]] ['addq [[#imm-rand 1] [#var-rand '_₂]]] ['movq [[#var-rand '_₂] [#var-rand '_₃]]] ['addq [[#imm-rand 1] [#var-rand '_₃]]] ['movq [[#var-rand '_₃] [#var-rand '_₄]]] ['addq [[#imm-rand 1] [#var-rand '_₄]]] ['movq [[#var-rand '_₄] [#reg-rand 'rax]]] ['addq [[#imm-rand 1] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

allocate-registers:

  [#cons-x86-program [:ctx [:_₁ #int-t :_₂ #int-t :_₃ #int-t :_₄ #int-t] :stack-space 32] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} [#reg-rand 'rcx] {[#reg-rand 'rsp]} [#reg-rand 'rdx] {[#reg-rand 'rsp]} [#reg-rand 'rsi] {[#reg-rand 'rsp]} [#reg-rand 'rdi] {[#reg-rand 'rsp]} [#reg-rand 'r8] {[#reg-rand 'rsp]} [#reg-rand 'r9] {[#reg-rand 'rsp]} [#reg-rand 'r10] {[#reg-rand 'rsp]} [#reg-rand 'r11] {[#reg-rand 'rsp]} [#var-rand '_₁] {[#reg-rand 'rsp]} [#var-rand '_₂] {[#reg-rand 'rsp]} [#var-rand '_₃] {[#reg-rand 'rsp]} [#var-rand '_₄] {[#reg-rand 'rsp]})]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -8]]] ['movq [[#deref-rand 'rbp -8] [#deref-rand 'rbp -16]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#deref-rand 'rbp -24]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -24]]] ['movq [[#deref-rand 'rbp -24] [#deref-rand 'rbp -32]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -32]]] ['movq [[#deref-rand 'rbp -32] [#reg-rand 'rax]]] ['addq [[#imm-rand 1] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

patch-instructions:

  [#cons-x86-program [:ctx [:_₁ #int-t :_₂ #int-t :_₃ #int-t :_₄ #int-t] :stack-space 32] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} [#reg-rand 'rcx] {[#reg-rand 'rsp]} [#reg-rand 'rdx] {[#reg-rand 'rsp]} [#reg-rand 'rsi] {[#reg-rand 'rsp]} [#reg-rand 'rdi] {[#reg-rand 'rsp]} [#reg-rand 'r8] {[#reg-rand 'rsp]} [#reg-rand 'r9] {[#reg-rand 'rsp]} [#reg-rand 'r10] {[#reg-rand 'rsp]} [#reg-rand 'r11] {[#reg-rand 'rsp]} [#var-rand '_₁] {[#reg-rand 'rsp]} [#var-rand '_₂] {[#reg-rand 'rsp]} [#var-rand '_₃] {[#reg-rand 'rsp]} [#var-rand '_₄] {[#reg-rand 'rsp]})]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -8]]] ['movq [[#deref-rand 'rbp -8] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -16]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -24]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -24]]] ['movq [[#deref-rand 'rbp -24] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -32]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -32]]] ['movq [[#deref-rand 'rbp -32] [#reg-rand 'rax]]] ['addq [[#imm-rand 1] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

prolog-and-epilog:

  [#cons-x86-program [:ctx [:_₁ #int-t :_₂ #int-t :_₃ #int-t :_₄ #int-t] :stack-space 32] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₃] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#var-rand '_₄] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₄]} [#reg-rand 'rcx] {[#reg-rand 'rsp]} [#reg-rand 'rdx] {[#reg-rand 'rsp]} [#reg-rand 'rsi] {[#reg-rand 'rsp]} [#reg-rand 'rdi] {[#reg-rand 'rsp]} [#reg-rand 'r8] {[#reg-rand 'rsp]} [#reg-rand 'r9] {[#reg-rand 'rsp]} [#reg-rand 'r10] {[#reg-rand 'rsp]} [#reg-rand 'r11] {[#reg-rand 'rsp]} [#var-rand '_₁] {[#reg-rand 'rsp]} [#var-rand '_₂] {[#reg-rand 'rsp]} [#var-rand '_₃] {[#reg-rand 'rsp]} [#var-rand '_₄] {[#reg-rand 'rsp]})]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -8]]] ['movq [[#deref-rand 'rbp -8] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -16]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -24]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -24]]] ['movq [[#deref-rand 'rbp -24] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -32]]] ['addq [[#imm-rand 1] [#deref-rand 'rbp -32]]] ['movq [[#deref-rand 'rbp -32] [#reg-rand 'rax]]] ['addq [[#imm-rand 1] [#reg-rand 'rax]]] [#jmp 'epilog]]] :begin [#cons-block [] [['pushq [[#reg-rand 'rbp]]] ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]] ['subq [[#imm-rand 32] [#reg-rand 'rsp]]] [#jmp 'start]]] :epilog [#cons-block [] [['addq [[#imm-rand 32] [#reg-rand 'rsp]]] ['popq [[#reg-rand 'rbp]]] #retq]]]]


program:

  (program () (let ((a 42)) (let ((b a)) b)))

uniquify:

  (program () (let ((a₁ 42)) (let ((b₁ a₁)) b₁)))

remove-complex-operands:

  (program () (let ((a₁ 42)) (let ((b₁ a₁)) b₁)))

explicate-control:

  (c-program () (:start ((= a₁ 42) (= b₁ a₁) (return b₁))))

select-instructions:

  [#cons-x86-program [:ctx [:a₁ #int-t :b₁ #int-t]] [:start [#cons-block [] [['movq [[#imm-rand 42] [#var-rand 'a₁]]] ['movq [[#var-rand 'a₁] [#var-rand 'b₁]]] ['movq [[#var-rand 'b₁] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

uncover-live:

  [#cons-x86-program [:ctx [:a₁ #int-t :b₁ #int-t]] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'a₁] [#reg-rand 'rsp]} {[#var-rand 'b₁] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 42] [#var-rand 'a₁]]] ['movq [[#var-rand 'a₁] [#var-rand 'b₁]]] ['movq [[#var-rand 'b₁] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

build-interference:

  [#cons-x86-program [:ctx [:a₁ #int-t :b₁ #int-t]] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'a₁] [#reg-rand 'rsp]} {[#var-rand 'b₁] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'a₁] [#reg-rand 'rsp] [#var-rand 'b₁] [#reg-rand 'rax]} (@hash [#var-rand 'a₁] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]} [#var-rand 'b₁] {[#reg-rand 'rsp]} [#reg-rand 'rax] {[#reg-rand 'rsp]})]] [['movq [[#imm-rand 42] [#var-rand 'a₁]]] ['movq [[#var-rand 'a₁] [#var-rand 'b₁]]] ['movq [[#var-rand 'b₁] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

assign-homes:

  [#cons-x86-program [:ctx [:a₁ #int-t :b₁ #int-t] :stack-space 16] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'a₁] [#reg-rand 'rsp]} {[#var-rand 'b₁] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'a₁] [#reg-rand 'rsp] [#var-rand 'b₁] [#reg-rand 'rax]} (@hash [#var-rand 'a₁] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]} [#var-rand 'b₁] {[#reg-rand 'rsp]} [#reg-rand 'rax] {[#reg-rand 'rsp]})]] [['movq [[#imm-rand 42] [#deref-rand 'rbp -8]]] ['movq [[#deref-rand 'rbp -8] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

patch-instructions:

  [#cons-x86-program [:ctx [:a₁ #int-t :b₁ #int-t] :stack-space 16] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'a₁] [#reg-rand 'rsp]} {[#var-rand 'b₁] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'a₁] [#reg-rand 'rsp] [#var-rand 'b₁] [#reg-rand 'rax]} (@hash [#var-rand 'a₁] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]} [#var-rand 'b₁] {[#reg-rand 'rsp]} [#reg-rand 'rax] {[#reg-rand 'rsp]})]] [['movq [[#imm-rand 42] [#deref-rand 'rbp -8]]] ['movq [[#deref-rand 'rbp -8] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]

prolog-and-epilog:

  [#cons-x86-program [:ctx [:a₁ #int-t :b₁ #int-t] :stack-space 16] [:start [#cons-block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'a₁] [#reg-rand 'rsp]} {[#var-rand 'b₁] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'a₁] [#reg-rand 'rsp] [#var-rand 'b₁] [#reg-rand 'rax]} (@hash [#var-rand 'a₁] {[#reg-rand 'rsp]} [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]} [#var-rand 'b₁] {[#reg-rand 'rsp]} [#reg-rand 'rax] {[#reg-rand 'rsp]})]] [['movq [[#imm-rand 42] [#deref-rand 'rbp -8]]] ['movq [[#deref-rand 'rbp -8] [#reg-rand 'rax]]] ['movq [[#reg-rand 'rax] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] [#jmp 'epilog]]] :begin [#cons-block [] [['pushq [[#reg-rand 'rbp]]] ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]] ['subq [[#imm-rand 16] [#reg-rand 'rsp]]] [#jmp 'start]]] :epilog [#cons-block [] [['addq [[#imm-rand 16] [#reg-rand 'rsp]]] ['popq [[#reg-rand 'rbp]]] #retq]]]]


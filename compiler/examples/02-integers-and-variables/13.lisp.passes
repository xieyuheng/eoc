000 (program () (let ((x (iadd 42 (ineg 10)))) (iadd x 10)))
010 (program () (let ((x₁ (iadd 42 (ineg 10)))) (iadd x₁ 10)))
020 (program () (let ((x₁ (let ((_₁ (ineg 10))) (iadd 42 _₁)))) (iadd x₁ 10)))
030 (c-program () (:start ((= _₁ (ineg 10)) (= x₁ (iadd 42 _₁)) (return (iadd x₁ 10)))))
040 [#@x86-program [:ctx [:_₁ #int-t :x₁ #int-t]] [:start [#@block [] [['movq [[#imm-rand 10] [#var-rand '_₁]]] ['negq [[#var-rand '_₁]]] ['movq [[#imm-rand 42] [#var-rand 'x₁]]] ['addq [[#var-rand '_₁] [#var-rand 'x₁]]] ['movq [[#var-rand 'x₁] [#reg-rand 'rax]]] ['addq [[#imm-rand 10] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
050 [#@x86-program [:ctx [:_₁ #int-t :x₁ #int-t]] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'x₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 10] [#var-rand '_₁]]] ['negq [[#var-rand '_₁]]] ['movq [[#imm-rand 42] [#var-rand 'x₁]]] ['addq [[#var-rand '_₁] [#var-rand 'x₁]]] ['movq [[#var-rand 'x₁] [#reg-rand 'rax]]] ['addq [[#imm-rand 10] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
060 [#@x86-program [:ctx [:_₁ #int-t :x₁ #int-t]] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'x₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 10] [#var-rand '_₁]]] ['negq [[#var-rand '_₁]]] ['movq [[#imm-rand 42] [#var-rand 'x₁]]] ['addq [[#var-rand '_₁] [#var-rand 'x₁]]] ['movq [[#var-rand 'x₁] [#reg-rand 'rax]]] ['addq [[#imm-rand 10] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
070 [#@x86-program [:ctx [:_₁ #int-t :x₁ #int-t] :stack-space 16] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'x₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 10] [#deref-rand 'rbp -8]]] ['negq [[#deref-rand 'rbp -8]]] ['movq [[#imm-rand 42] [#deref-rand 'rbp -16]]] ['addq [[#deref-rand 'rbp -8] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] ['addq [[#imm-rand 10] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
080 [#@x86-program [:ctx [:_₁ #int-t :x₁ #int-t] :stack-space 16] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'x₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 10] [#deref-rand 'rbp -8]]] ['negq [[#deref-rand 'rbp -8]]] ['movq [[#imm-rand 42] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -8] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rax] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] ['addq [[#imm-rand 10] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
090 [#@x86-program [:ctx [:_₁ #int-t :x₁ #int-t] :stack-space 16] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'x₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 10] [#deref-rand 'rbp -8]]] ['negq [[#deref-rand 'rbp -8]]] ['movq [[#imm-rand 42] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -8] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rax] [#deref-rand 'rbp -16]]] ['movq [[#deref-rand 'rbp -16] [#reg-rand 'rax]]] ['addq [[#imm-rand 10] [#reg-rand 'rax]]] [#jmp 'epilog]]] :begin [#@block [] [['pushq [[#reg-rand 'rbp]]] ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]] ['subq [[#imm-rand 16] [#reg-rand 'rsp]]] [#jmp 'start]]] :epilog [#@block [] [['addq [[#imm-rand 16] [#reg-rand 'rsp]]] ['popq [[#reg-rand 'rbp]]] #retq]]]]

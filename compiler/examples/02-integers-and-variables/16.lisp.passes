000 (program () (isub 50 8))
010 (program () (isub 50 8))
020 (program () (isub 50 8))
030 (c-program () (:start ((return (isub 50 8)))))
040 (@x86-program [:ctx []] [:start (@block [] [['movq [(imm-rand 50) (reg-rand 'rax)]] ['subq [(imm-rand 8) (reg-rand 'rax)]] (jmp 'epilog)])])
050 (@x86-program [:ctx []] [:start (@block [:live-after-instrs [{(reg-rand 'rsp)} {(reg-rand 'rax) (reg-rand 'rsp)} {(reg-rand 'rsp) (reg-rand 'rax)} {} {}] :live-before-block {(reg-rand 'rsp)}] [['movq [(imm-rand 50) (reg-rand 'rax)]] ['subq [(imm-rand 8) (reg-rand 'rax)]] (jmp 'epilog)])])
060 (@x86-program [:ctx [] :stack-space 0] [:start (@block [:live-after-instrs [{(reg-rand 'rsp)} {(reg-rand 'rax) (reg-rand 'rsp)} {(reg-rand 'rsp) (reg-rand 'rax)} {} {}] :live-before-block {(reg-rand 'rsp)}] [['movq [(imm-rand 50) (reg-rand 'rax)]] ['subq [(imm-rand 8) (reg-rand 'rax)]] (jmp 'epilog)])])
070 (@x86-program [:ctx [] :stack-space 0] [:start (@block [:live-after-instrs [{(reg-rand 'rsp)} {(reg-rand 'rax) (reg-rand 'rsp)} {(reg-rand 'rsp) (reg-rand 'rax)} {} {}] :live-before-block {(reg-rand 'rsp)}] [['movq [(imm-rand 50) (reg-rand 'rax)]] ['subq [(imm-rand 8) (reg-rand 'rax)]] (jmp 'epilog)])])
080 (@x86-program [:ctx [] :stack-space 0] [:start (@block [:live-after-instrs [{(reg-rand 'rsp)} {(reg-rand 'rax) (reg-rand 'rsp)} {(reg-rand 'rsp) (reg-rand 'rax)} {} {}] :live-before-block {(reg-rand 'rsp)}] [['movq [(imm-rand 50) (reg-rand 'rax)]] ['subq [(imm-rand 8) (reg-rand 'rax)]] (jmp 'epilog)]) :begin (@block [] [['pushq [(reg-rand 'rbp)]] ['movq [(reg-rand 'rsp) (reg-rand 'rbp)]] ['subq [(imm-rand 16) (reg-rand 'rsp)]] (jmp 'start)]) :epilog (@block [] [['addq [(imm-rand 16) (reg-rand 'rsp)]] ['popq [(reg-rand 'rbp)]] retq])])

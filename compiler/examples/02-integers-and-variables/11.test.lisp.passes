000 (program () (iadd (iadd 1 2) (iadd 3 4)))
010 (program () (iadd (iadd 1 2) (iadd 3 4)))
020 (program () (let ((_₂ (iadd 3 4))) (let ((_₁ (iadd 1 2))) (iadd _₁ _₂))))
030 (c-program (:ctx (:_₂ int-t :_₁ int-t)) (:start ((= _₂ (iadd 3 4)) (= _₁ (iadd 1 2)) (return (iadd _₁ _₂)))))
040 (x86-program (:ctx (:_₂ int-t :_₁ int-t)) (:start (() ("movq $3, _₂" "addq $4, _₂" "movq $1, _₁" "addq $2, _₁" "movq _₁, %rax" "addq _₂, %rax" "jmp epilog"))))
050 (x86-program (:ctx (:_₂ int-t :_₁ int-t)) (:start (() ("movq $3, -8(%rbp)" "addq $4, -8(%rbp)" "movq $1, -16(%rbp)" "addq $2, -16(%rbp)" "movq -16(%rbp), %rax" "addq -8(%rbp), %rax" "jmp epilog"))))
060 (x86-program (:ctx (:_₂ int-t :_₁ int-t)) (:start (() ("movq $3, -8(%rbp)" "addq $4, -8(%rbp)" "movq $1, -16(%rbp)" "addq $2, -16(%rbp)" "movq -16(%rbp), %rax" "addq -8(%rbp), %rax" "jmp epilog"))))
070 (x86-program (:ctx (:_₂ int-t :_₁ int-t)) (:start (() ("movq $3, -8(%rbp)" "addq $4, -8(%rbp)" "movq $1, -16(%rbp)" "addq $2, -16(%rbp)" "movq -16(%rbp), %rax" "addq -8(%rbp), %rax" "jmp epilog")) :main (() ("pushq %rbp" "movq %rsp, %rbp" "subq $16, %rsp" "jmp start")) :epilog (() ("addq $16, %rsp" "popq %rbp" "retq"))))

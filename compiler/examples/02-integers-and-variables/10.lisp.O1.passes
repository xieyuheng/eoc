000 (program () (let ((x (iadd (iadd 1 2) (iadd 3 4)))) (iadd x 5)))
001 (program () 15)
010 (program () 15)
020 (program () 15)
030 (c-program (:ctx ()) (:start ((return 15))))
040 (x86-program (:ctx ()) (:start (() ((movq $15 %rax) (jmp epilog)))))
050 (x86-program (:ctx ()) (:start ((:live-before () :live-after ()) ((movq $15 %rax) (jmp epilog)))))
060 (x86-program (:ctx ()) (:start ((:live-before () :live-after ()) ((movq $15 %rax) (jmp epilog)))))
070 (x86-program (:ctx ()) (:start ((:live-before () :live-after ()) ((movq $15 %rax) (jmp epilog)))))
080 (x86-program (:ctx ()) (:start ((:live-before () :live-after ()) ((movq $15 %rax) (jmp epilog))) :begin (() ((pushq %rbp) (movq %rsp %rbp) (subq $16 %rsp) (jmp start))) :epilog (() ((addq $16 %rsp) (popq %rbp) (retq)))))

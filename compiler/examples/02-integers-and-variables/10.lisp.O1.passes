000 (program () (let ((x (iadd (iadd 1 2) (iadd 3 4)))) (iadd x 5)))
001 (program () 15)
010 (program () 15)
020 (program () 15)
030 (c-program () (:start ((return 15))))
040 [#@x86-program [:ctx []] [:start [#@block [] [['movq [[#imm-rand 15] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
050 [#@x86-program [:ctx []] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 15] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
060 [#@x86-program [:ctx [] :stack-space 0] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 15] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
070 [#@x86-program [:ctx [] :stack-space 0] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 15] [#reg-rand 'rax]]] [#jmp 'epilog]]]]]
080 [#@x86-program [:ctx [] :stack-space 0] [:start [#@block [:live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 15] [#reg-rand 'rax]]] [#jmp 'epilog]]] :begin [#@block [] [['pushq [[#reg-rand 'rbp]]] ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]] [#jmp 'start]]] :epilog [#@block [] [['popq [[#reg-rand 'rbp]]] [#retq]]]]]

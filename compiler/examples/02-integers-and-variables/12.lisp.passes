program:

  (program () (iadd (iadd 1 2) (iadd 3 (iadd 4 5))))

uniquify:

  (program () (iadd (iadd 1 2) (iadd 3 (iadd 4 5))))

remove-complex-operands:

  (program () (let ((_₁ (iadd 1 2))) (let ((_₂ (iadd 4 5))) (let ((_₃ (iadd 3 _₂))) (iadd _₁ _₃)))))

explicate-control:

  [#cons-c-program
   []
   [:begin
    [#cons-seq
     [#assign-stmt
      [#var-c-exp '_₁]
      [#prim-c-exp 'iadd [[#int-c-exp 1] [#int-c-exp 2]]]]
     [#cons-seq
      [#assign-stmt
       [#var-c-exp '_₂]
       [#prim-c-exp 'iadd [[#int-c-exp 4] [#int-c-exp 5]]]]
      [#cons-seq
       [#assign-stmt
        [#var-c-exp '_₃]
        [#prim-c-exp 'iadd [[#int-c-exp 3] [#var-c-exp '_₂]]]]
       [#return-seq [#prim-c-exp 'iadd [[#var-c-exp '_₁] [#var-c-exp '_₃]]]]]]]]]

select-instructions:

  [#cons-x86-program
   [:contexts [:begin [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]]
   [:begin
    [#cons-block
     [:context [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]
     [['movq [[#imm-rand 1] [#var-rand '_₁]]]
      ['addq [[#imm-rand 2] [#var-rand '_₁]]]
      ['movq [[#imm-rand 4] [#var-rand '_₂]]]
      ['addq [[#imm-rand 5] [#var-rand '_₂]]]
      ['movq [[#imm-rand 3] [#var-rand '_₃]]]
      ['addq [[#var-rand '_₂] [#var-rand '_₃]]]
      ['movq [[#var-rand '_₁] [#reg-rand 'rax]]]
      ['addq [[#var-rand '_₃] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

uncover-live:

  [#cons-x86-program
   [:contexts [:begin [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]]
   [:begin
    [#cons-block
     [:context [:_₁ #int-t :_₂ #int-t :_₃ #int-t]
      :block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#var-rand '_₃] [#reg-rand 'rsp]}
       {[#var-rand '_₃] [#reg-rand 'rax] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]]
     [['movq [[#imm-rand 1] [#var-rand '_₁]]]
      ['addq [[#imm-rand 2] [#var-rand '_₁]]]
      ['movq [[#imm-rand 4] [#var-rand '_₂]]]
      ['addq [[#imm-rand 5] [#var-rand '_₂]]]
      ['movq [[#imm-rand 3] [#var-rand '_₃]]]
      ['addq [[#var-rand '_₂] [#var-rand '_₃]]]
      ['movq [[#var-rand '_₁] [#reg-rand 'rax]]]
      ['addq [[#var-rand '_₃] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

build-interference:

  [#cons-x86-program
   [:contexts [:begin [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]]
   [:begin
    [#cons-block
     [:context [:_₁ #int-t :_₂ #int-t :_₃ #int-t]
      :block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#var-rand '_₃] [#reg-rand 'rsp]}
       {[#var-rand '_₃] [#reg-rand 'rax] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]
      :interference-graph
      [#cons-graph
       {[#var-rand '_₁]
        [#var-rand '_₂]
        [#var-rand '_₃]
        [#reg-rand 'rsp]
        [#reg-rand 'rax]}
       (@hash
         [#var-rand '_₁] {[#reg-rand 'rsp] [#var-rand '_₂] [#var-rand '_₃]}
         [#reg-rand 'rsp]
         {[#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#reg-rand 'rax]}
         [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#var-rand '_₃]}
         [#var-rand '_₃]
         {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
         [#reg-rand 'rax] {[#var-rand '_₃] [#reg-rand 'rsp]})]]
     [['movq [[#imm-rand 1] [#var-rand '_₁]]]
      ['addq [[#imm-rand 2] [#var-rand '_₁]]]
      ['movq [[#imm-rand 4] [#var-rand '_₂]]]
      ['addq [[#imm-rand 5] [#var-rand '_₂]]]
      ['movq [[#imm-rand 3] [#var-rand '_₃]]]
      ['addq [[#var-rand '_₂] [#var-rand '_₃]]]
      ['movq [[#var-rand '_₁] [#reg-rand 'rax]]]
      ['addq [[#var-rand '_₃] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

allocate-registers:

  [#cons-x86-program
   [:contexts [:begin [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]]
   [:begin
    [#cons-block
     [:home-locations
      (@hash
        [#var-rand '_₃] [#reg-rand 'rcx]
        [#var-rand '_₁] [#reg-rand 'rbx]
        [#var-rand '_₂] [#deref-rand 'rbp -16])
      :spill-count 1
      :callee-saved [[#reg-rand 'rbx]]
      :context [:_₁ #int-t :_₂ #int-t :_₃ #int-t]
      :block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#var-rand '_₃] [#reg-rand 'rsp]}
       {[#var-rand '_₃] [#reg-rand 'rax] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]
      :interference-graph
      [#cons-graph
       {[#var-rand '_₁]
        [#var-rand '_₂]
        [#var-rand '_₃]
        [#reg-rand 'rsp]
        [#reg-rand 'rax]}
       (@hash
         [#var-rand '_₁] {[#reg-rand 'rsp] [#var-rand '_₂] [#var-rand '_₃]}
         [#reg-rand 'rsp]
         {[#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#reg-rand 'rax]}
         [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#var-rand '_₃]}
         [#var-rand '_₃]
         {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
         [#reg-rand 'rax] {[#var-rand '_₃] [#reg-rand 'rsp]})]]
     [['movq [[#imm-rand 1] [#var-rand '_₁]]]
      ['addq [[#imm-rand 2] [#var-rand '_₁]]]
      ['movq [[#imm-rand 4] [#var-rand '_₂]]]
      ['addq [[#imm-rand 5] [#var-rand '_₂]]]
      ['movq [[#imm-rand 3] [#var-rand '_₃]]]
      ['addq [[#var-rand '_₂] [#var-rand '_₃]]]
      ['movq [[#var-rand '_₁] [#reg-rand 'rax]]]
      ['addq [[#var-rand '_₃] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

assign-homes:

  [#cons-x86-program
   [:contexts [:begin [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]]
   [:begin
    [#cons-block
     [:home-locations
      (@hash
        [#var-rand '_₃] [#reg-rand 'rcx]
        [#var-rand '_₁] [#reg-rand 'rbx]
        [#var-rand '_₂] [#deref-rand 'rbp -16])
      :spill-count 1
      :callee-saved [[#reg-rand 'rbx]]
      :context [:_₁ #int-t :_₂ #int-t :_₃ #int-t]
      :block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#var-rand '_₃] [#reg-rand 'rsp]}
       {[#var-rand '_₃] [#reg-rand 'rax] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]
      :interference-graph
      [#cons-graph
       {[#var-rand '_₁]
        [#var-rand '_₂]
        [#var-rand '_₃]
        [#reg-rand 'rsp]
        [#reg-rand 'rax]}
       (@hash
         [#var-rand '_₁] {[#reg-rand 'rsp] [#var-rand '_₂] [#var-rand '_₃]}
         [#reg-rand 'rsp]
         {[#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#reg-rand 'rax]}
         [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#var-rand '_₃]}
         [#var-rand '_₃]
         {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
         [#reg-rand 'rax] {[#var-rand '_₃] [#reg-rand 'rsp]})]]
     [['movq [[#imm-rand 1] [#reg-rand 'rbx]]]
      ['addq [[#imm-rand 2] [#reg-rand 'rbx]]]
      ['movq [[#imm-rand 4] [#deref-rand 'rbp -16]]]
      ['addq [[#imm-rand 5] [#deref-rand 'rbp -16]]]
      ['movq [[#imm-rand 3] [#reg-rand 'rcx]]]
      ['addq [[#deref-rand 'rbp -16] [#reg-rand 'rcx]]]
      ['movq [[#reg-rand 'rbx] [#reg-rand 'rax]]]
      ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

patch-instructions:

  [#cons-x86-program
   [:contexts [:begin [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]]
   [:begin
    [#cons-block
     [:home-locations
      (@hash
        [#var-rand '_₃] [#reg-rand 'rcx]
        [#var-rand '_₁] [#reg-rand 'rbx]
        [#var-rand '_₂] [#deref-rand 'rbp -16])
      :spill-count 1
      :callee-saved [[#reg-rand 'rbx]]
      :context [:_₁ #int-t :_₂ #int-t :_₃ #int-t]
      :block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#var-rand '_₃] [#reg-rand 'rsp]}
       {[#var-rand '_₃] [#reg-rand 'rax] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]
      :interference-graph
      [#cons-graph
       {[#var-rand '_₁]
        [#var-rand '_₂]
        [#var-rand '_₃]
        [#reg-rand 'rsp]
        [#reg-rand 'rax]}
       (@hash
         [#var-rand '_₁] {[#reg-rand 'rsp] [#var-rand '_₂] [#var-rand '_₃]}
         [#reg-rand 'rsp]
         {[#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#reg-rand 'rax]}
         [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#var-rand '_₃]}
         [#var-rand '_₃]
         {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
         [#reg-rand 'rax] {[#var-rand '_₃] [#reg-rand 'rsp]})]]
     [['movq [[#imm-rand 1] [#reg-rand 'rbx]]]
      ['addq [[#imm-rand 2] [#reg-rand 'rbx]]]
      ['movq [[#imm-rand 4] [#deref-rand 'rbp -16]]]
      ['addq [[#imm-rand 5] [#deref-rand 'rbp -16]]]
      ['movq [[#imm-rand 3] [#reg-rand 'rcx]]]
      ['addq [[#deref-rand 'rbp -16] [#reg-rand 'rcx]]]
      ['movq [[#reg-rand 'rbx] [#reg-rand 'rax]]]
      ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

prolog-and-epilog:

  [#cons-x86-program
   [:contexts [:begin [:_₁ #int-t :_₂ #int-t :_₃ #int-t]]]
   [:begin
    [#cons-block
     []
     [['pushq [[#reg-rand 'rbp]]]
      ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]]
      ['pushq [[#reg-rand 'rbx]]]
      ['subq [[#imm-rand 8] [#reg-rand 'rsp]]]
      [#jmp 'begin.body]]]
    :begin.body
    [#cons-block
     [:home-locations
      (@hash
        [#var-rand '_₃] [#reg-rand 'rcx]
        [#var-rand '_₁] [#reg-rand 'rbx]
        [#var-rand '_₂] [#deref-rand 'rbp -16])
      :spill-count 1
      :callee-saved [[#reg-rand 'rbx]]
      :context [:_₁ #int-t :_₂ #int-t :_₃ #int-t]
      :block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₂] [#var-rand '_₃] [#var-rand '_₁] [#reg-rand 'rsp]}
       {[#var-rand '_₁] [#var-rand '_₃] [#reg-rand 'rsp]}
       {[#var-rand '_₃] [#reg-rand 'rax] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]
      :interference-graph
      [#cons-graph
       {[#var-rand '_₁]
        [#var-rand '_₂]
        [#var-rand '_₃]
        [#reg-rand 'rsp]
        [#reg-rand 'rax]}
       (@hash
         [#var-rand '_₁] {[#reg-rand 'rsp] [#var-rand '_₂] [#var-rand '_₃]}
         [#reg-rand 'rsp]
         {[#var-rand '_₁] [#var-rand '_₂] [#var-rand '_₃] [#reg-rand 'rax]}
         [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#var-rand '_₃]}
         [#var-rand '_₃]
         {[#var-rand '_₂] [#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
         [#reg-rand 'rax] {[#var-rand '_₃] [#reg-rand 'rsp]})]]
     [['movq [[#imm-rand 1] [#reg-rand 'rbx]]]
      ['addq [[#imm-rand 2] [#reg-rand 'rbx]]]
      ['movq [[#imm-rand 4] [#deref-rand 'rbp -16]]]
      ['addq [[#imm-rand 5] [#deref-rand 'rbp -16]]]
      ['movq [[#imm-rand 3] [#reg-rand 'rcx]]]
      ['addq [[#deref-rand 'rbp -16] [#reg-rand 'rcx]]]
      ['movq [[#reg-rand 'rbx] [#reg-rand 'rax]]]
      ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]
    :begin.epilog
    [#cons-block
     []
     [['addq [[#imm-rand 8] [#reg-rand 'rsp]]]
      ['popq [[#reg-rand 'rbx]]]
      ['popq [[#reg-rand 'rbp]]]
      #retq]]]]


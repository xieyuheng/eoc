program:

  (program () (iadd (random-dice) (random-dice)))

uniquify:

  (program () (iadd (random-dice) (random-dice)))

remove-complex-operands:

  (program () (let ((_₁ (random-dice))) (let ((_₂ (random-dice))) (iadd _₁ _₂))))

explicate-control:

  (c-program () (:begin ((= _₁ (random-dice)) (= _₂ (random-dice)) (return (iadd _₁ _₂)))))

select-instructions:

  [#cons-x86-program [:contexts [:begin [:_₁ #int-t :_₂ #int-t]]] [:begin [#cons-block [:context [:_₁ #int-t :_₂ #int-t]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₁]]] [#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₂]]] ['movq [[#var-rand '_₁] [#reg-rand 'rax]]] ['addq [[#var-rand '_₂] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

uncover-live:

  [#cons-x86-program [:contexts [:begin [:_₁ #int-t :_₂ #int-t]]] [:begin [#cons-block [:context [:_₁ #int-t :_₂ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₁]]] [#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₂]]] ['movq [[#var-rand '_₁] [#reg-rand 'rax]]] ['addq [[#var-rand '_₂] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

build-interference:

  [#cons-x86-program [:contexts [:begin [:_₁ #int-t :_₂ #int-t]]] [:begin [#cons-block [:context [:_₁ #int-t :_₂ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rcx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rsi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r8] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r9] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r10] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r11] {[#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#reg-rand 'rsp] [#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₂]} [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]})]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₁]]] [#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#var-rand '_₂]]] ['movq [[#var-rand '_₁] [#reg-rand 'rax]]] ['addq [[#var-rand '_₂] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

allocate-registers:

  [#cons-x86-program [:contexts [:begin [:_₁ #int-t :_₂ #int-t]]] [:begin [#cons-block [:context [:_₁ #int-t :_₂ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rcx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rsi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r8] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r9] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r10] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r11] {[#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#reg-rand 'rsp] [#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₂]} [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]})] :spilled-variable-count 0 :used-callee-saved-registers [[#reg-rand 'rbx]]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#reg-rand 'rbx]]] [#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#reg-rand 'rcx]]] ['movq [[#reg-rand 'rbx] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

patch-instructions:

  [#cons-x86-program [:contexts [:begin [:_₁ #int-t :_₂ #int-t]]] [:begin [#cons-block [:context [:_₁ #int-t :_₂ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rcx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rsi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r8] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r9] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r10] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r11] {[#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#reg-rand 'rsp] [#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₂]} [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]})] :spilled-variable-count 0 :used-callee-saved-registers [[#reg-rand 'rbx]]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#reg-rand 'rbx]]] [#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#reg-rand 'rcx]]] ['movq [[#reg-rand 'rbx] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

prolog-and-epilog:

  [#cons-x86-program [:contexts [:begin [:_₁ #int-t :_₂ #int-t]]] [:begin [#cons-block [] [['pushq [[#reg-rand 'rbp]]] ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]] ['pushq [[#reg-rand 'rbx]]] ['subq [[#imm-rand 8] [#reg-rand 'rsp]]] [#jmp 'begin.body]]] :begin.body [#cons-block [:context [:_₁ #int-t :_₂ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#reg-rand 'rax] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rsp]} {[#reg-rand 'rax] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand '_₂] [#reg-rand 'rsp]} {[#var-rand '_₂] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#reg-rand 'rax] [#reg-rand 'rsp] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} (@hash [#reg-rand 'rax] {[#reg-rand 'rsp] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rsp] {[#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₁] [#var-rand '_₂]} [#reg-rand 'rcx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdx] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rsi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'rdi] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r8] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r9] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r10] {[#reg-rand 'rsp] [#var-rand '_₁]} [#reg-rand 'r11] {[#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#reg-rand 'rsp] [#reg-rand 'rax] [#reg-rand 'rcx] [#reg-rand 'rdx] [#reg-rand 'rsi] [#reg-rand 'rdi] [#reg-rand 'r8] [#reg-rand 'r9] [#reg-rand 'r10] [#reg-rand 'r11] [#var-rand '_₂]} [#var-rand '_₂] {[#var-rand '_₁] [#reg-rand 'rsp] [#reg-rand 'rax]})] :spilled-variable-count 0 :used-callee-saved-registers [[#reg-rand 'rbx]]] [[#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#reg-rand 'rbx]]] [#callq 'random_dice 0] ['movq [[#reg-rand 'rax] [#reg-rand 'rcx]]] ['movq [[#reg-rand 'rbx] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]] :begin.epilog [#cons-block [] [['addq [[#imm-rand 8] [#reg-rand 'rsp]]] ['popq [[#reg-rand 'rbx]]] ['popq [[#reg-rand 'rbp]]] #retq]]]]


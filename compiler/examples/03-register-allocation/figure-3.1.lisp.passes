program:

  (program () (let ((v 1)) (let ((w 42)) (let ((x (iadd v 7))) (let ((y x)) (let ((z (iadd x w))) (iadd z (ineg y))))))))

uniquify:

  (program () (let ((v₁ 1)) (let ((w₁ 42)) (let ((x₁ (iadd v₁ 7))) (let ((y₁ x₁)) (let ((z₁ (iadd x₁ w₁))) (iadd z₁ (ineg y₁))))))))

remove-complex-operands:

  (program () (let ((v₁ 1)) (let ((w₁ 42)) (let ((x₁ (iadd v₁ 7))) (let ((y₁ x₁)) (let ((z₁ (iadd x₁ w₁))) (let ((_₁ (ineg y₁))) (iadd z₁ _₁))))))))

explicate-control:

  (c-program () (:begin ((= v₁ 1) (= w₁ 42) (= x₁ (iadd v₁ 7)) (= y₁ x₁) (= z₁ (iadd x₁ w₁)) (= _₁ (ineg y₁)) (return (iadd z₁ _₁)))))

select-instructions:

  [#cons-x86-program [:contexts [:begin [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t]]] [:begin [#cons-block [:context [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t]] [['movq [[#imm-rand 1] [#var-rand 'v₁]]] ['movq [[#imm-rand 42] [#var-rand 'w₁]]] ['movq [[#var-rand 'v₁] [#var-rand 'x₁]]] ['addq [[#imm-rand 7] [#var-rand 'x₁]]] ['movq [[#var-rand 'x₁] [#var-rand 'y₁]]] ['movq [[#var-rand 'x₁] [#var-rand 'z₁]]] ['addq [[#var-rand 'w₁] [#var-rand 'z₁]]] ['movq [[#var-rand 'y₁] [#var-rand '_₁]]] ['negq [[#var-rand '_₁]]] ['movq [[#var-rand 'z₁] [#reg-rand 'rax]]] ['addq [[#var-rand '_₁] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

uncover-live:

  [#cons-x86-program [:contexts [:begin [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t]]] [:begin [#cons-block [:context [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'v₁] [#reg-rand 'rsp]} {[#var-rand 'v₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'w₁] [#var-rand 'z₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'y₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]}] [['movq [[#imm-rand 1] [#var-rand 'v₁]]] ['movq [[#imm-rand 42] [#var-rand 'w₁]]] ['movq [[#var-rand 'v₁] [#var-rand 'x₁]]] ['addq [[#imm-rand 7] [#var-rand 'x₁]]] ['movq [[#var-rand 'x₁] [#var-rand 'y₁]]] ['movq [[#var-rand 'x₁] [#var-rand 'z₁]]] ['addq [[#var-rand 'w₁] [#var-rand 'z₁]]] ['movq [[#var-rand 'y₁] [#var-rand '_₁]]] ['negq [[#var-rand '_₁]]] ['movq [[#var-rand 'z₁] [#reg-rand 'rax]]] ['addq [[#var-rand '_₁] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

build-interference:

  [#cons-x86-program [:contexts [:begin [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t]]] [:begin [#cons-block [:context [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'v₁] [#reg-rand 'rsp]} {[#var-rand 'v₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'w₁] [#var-rand 'z₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'y₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} (@hash [#var-rand 'v₁] {[#reg-rand 'rsp] [#var-rand 'w₁]} [#reg-rand 'rsp] {[#var-rand 'v₁] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} [#var-rand 'w₁] {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁]} [#var-rand 'x₁] {[#var-rand 'w₁] [#reg-rand 'rsp]} [#var-rand 'y₁] {[#var-rand 'w₁] [#reg-rand 'rsp] [#var-rand 'z₁]} [#var-rand 'z₁] {[#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#var-rand 'z₁] [#reg-rand 'rsp] [#reg-rand 'rax]} [#reg-rand 'rax] {[#var-rand '_₁] [#reg-rand 'rsp]})]] [['movq [[#imm-rand 1] [#var-rand 'v₁]]] ['movq [[#imm-rand 42] [#var-rand 'w₁]]] ['movq [[#var-rand 'v₁] [#var-rand 'x₁]]] ['addq [[#imm-rand 7] [#var-rand 'x₁]]] ['movq [[#var-rand 'x₁] [#var-rand 'y₁]]] ['movq [[#var-rand 'x₁] [#var-rand 'z₁]]] ['addq [[#var-rand 'w₁] [#var-rand 'z₁]]] ['movq [[#var-rand 'y₁] [#var-rand '_₁]]] ['negq [[#var-rand '_₁]]] ['movq [[#var-rand 'z₁] [#reg-rand 'rax]]] ['addq [[#var-rand '_₁] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

allocate-registers:

  [#cons-x86-program [:contexts [:begin [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t]]] [:begin [#cons-block [:context [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'v₁] [#reg-rand 'rsp]} {[#var-rand 'v₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'w₁] [#var-rand 'z₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'y₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} (@hash [#var-rand 'v₁] {[#reg-rand 'rsp] [#var-rand 'w₁]} [#reg-rand 'rsp] {[#var-rand 'v₁] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} [#var-rand 'w₁] {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁]} [#var-rand 'x₁] {[#var-rand 'w₁] [#reg-rand 'rsp]} [#var-rand 'y₁] {[#var-rand 'w₁] [#reg-rand 'rsp] [#var-rand 'z₁]} [#var-rand 'z₁] {[#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#var-rand 'z₁] [#reg-rand 'rsp] [#reg-rand 'rax]} [#reg-rand 'rax] {[#var-rand '_₁] [#reg-rand 'rsp]})] :spilled-variable-count 128 :used-callee-saved-registers []] [['movq [[#imm-rand 1] [#reg-rand 'rdx]]] ['movq [[#imm-rand 42] [#reg-rand 'rcx]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rdx]]] ['addq [[#imm-rand 7] [#reg-rand 'rdx]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rsi]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rdx]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rdx]]] ['movq [[#reg-rand 'rsi] [#reg-rand 'rcx]]] ['negq [[#reg-rand 'rcx]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

patch-instructions:

  [#cons-x86-program [:contexts [:begin [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t]]] [:begin [#cons-block [:context [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'v₁] [#reg-rand 'rsp]} {[#var-rand 'v₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'w₁] [#var-rand 'z₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'y₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} (@hash [#var-rand 'v₁] {[#reg-rand 'rsp] [#var-rand 'w₁]} [#reg-rand 'rsp] {[#var-rand 'v₁] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} [#var-rand 'w₁] {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁]} [#var-rand 'x₁] {[#var-rand 'w₁] [#reg-rand 'rsp]} [#var-rand 'y₁] {[#var-rand 'w₁] [#reg-rand 'rsp] [#var-rand 'z₁]} [#var-rand 'z₁] {[#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#var-rand 'z₁] [#reg-rand 'rsp] [#reg-rand 'rax]} [#reg-rand 'rax] {[#var-rand '_₁] [#reg-rand 'rsp]})] :spilled-variable-count 128 :used-callee-saved-registers []] [['movq [[#imm-rand 1] [#reg-rand 'rdx]]] ['movq [[#imm-rand 42] [#reg-rand 'rcx]]] ['addq [[#imm-rand 7] [#reg-rand 'rdx]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rsi]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rdx]]] ['movq [[#reg-rand 'rsi] [#reg-rand 'rcx]]] ['negq [[#reg-rand 'rcx]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]]]]

prolog-and-epilog:

  [#cons-x86-program [:contexts [:begin [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t]]] [:begin [#cons-block [] [['pushq [[#reg-rand 'rbp]]] ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]] ['subq [[#imm-rand 128] [#reg-rand 'rsp]]] [#jmp 'begin.body]]] :begin.body [#cons-block [:context [:v₁ #int-t :w₁ #int-t :x₁ #int-t :y₁ #int-t :z₁ #int-t :_₁ #int-t] :live-after-instrs [{[#reg-rand 'rsp]} {[#var-rand 'v₁] [#reg-rand 'rsp]} {[#var-rand 'v₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#reg-rand 'rsp]} {[#var-rand 'x₁] [#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'w₁] [#var-rand 'z₁] [#var-rand 'y₁] [#reg-rand 'rsp]} {[#var-rand 'y₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#var-rand 'z₁] [#reg-rand 'rsp]} {[#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rsp]} {[#var-rand '_₁] [#reg-rand 'rax] [#reg-rand 'rsp]} {[#reg-rand 'rsp] [#reg-rand 'rax]} {} {}] :live-before-block {[#reg-rand 'rsp]} :interference-graph [#cons-graph {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} (@hash [#var-rand 'v₁] {[#reg-rand 'rsp] [#var-rand 'w₁]} [#reg-rand 'rsp] {[#var-rand 'v₁] [#var-rand 'w₁] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁] [#var-rand '_₁] [#reg-rand 'rax]} [#var-rand 'w₁] {[#var-rand 'v₁] [#reg-rand 'rsp] [#var-rand 'x₁] [#var-rand 'y₁] [#var-rand 'z₁]} [#var-rand 'x₁] {[#var-rand 'w₁] [#reg-rand 'rsp]} [#var-rand 'y₁] {[#var-rand 'w₁] [#reg-rand 'rsp] [#var-rand 'z₁]} [#var-rand 'z₁] {[#var-rand 'w₁] [#var-rand 'y₁] [#reg-rand 'rsp] [#var-rand '_₁]} [#var-rand '_₁] {[#var-rand 'z₁] [#reg-rand 'rsp] [#reg-rand 'rax]} [#reg-rand 'rax] {[#var-rand '_₁] [#reg-rand 'rsp]})] :spilled-variable-count 128 :used-callee-saved-registers []] [['movq [[#imm-rand 1] [#reg-rand 'rdx]]] ['movq [[#imm-rand 42] [#reg-rand 'rcx]]] ['addq [[#imm-rand 7] [#reg-rand 'rdx]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rsi]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rdx]]] ['movq [[#reg-rand 'rsi] [#reg-rand 'rcx]]] ['negq [[#reg-rand 'rcx]]] ['movq [[#reg-rand 'rdx] [#reg-rand 'rax]]] ['addq [[#reg-rand 'rcx] [#reg-rand 'rax]]] [#jmp 'begin.epilog]]] :begin.epilog [#cons-block [] [['addq [[#imm-rand 128] [#reg-rand 'rsp]]] ['popq [[#reg-rand 'rbp]]] #retq]]]]


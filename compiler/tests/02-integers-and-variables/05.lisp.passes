mod:

  (mod () (let ((a 42)) (let ((b a)) b)))

shrink:

  (mod () (let ((a 42)) (let ((b a)) b)))

uniquify:

  (mod () (let ((a₁ 42)) (let ((b₁ a₁)) b₁)))

check-type:

  (mod () (the int-t (let ((a₁ (the int-t 42))) (the int-t (let ((b₁ (the int-t a₁))) (the int-t b₁))))))

remove-complex-operands:

  (mod () (the int-t (let ((a₁ (the int-t 42))) (the int-t (let ((b₁ (the int-t a₁))) (the int-t b₁))))))

explicate-control:

  [#cons-c-mod
   []
   [:begin
    [#cons-seq
     [#assign-stmt [#var-c-exp 'a₁] #int-type [#int-c-exp 42]]
     [#cons-seq
      [#assign-stmt [#var-c-exp 'b₁] #int-type [#var-c-exp 'a₁]]
      [#return-seq [#var-c-exp 'b₁]]]]]]

uncover-locals:

  [#cons-c-mod
   [:locals [:a₁ #int-type :b₁ #int-type]]
   [:begin
    [#cons-seq
     [#assign-stmt [#var-c-exp 'a₁] #int-type [#int-c-exp 42]]
     [#cons-seq
      [#assign-stmt [#var-c-exp 'b₁] #int-type [#var-c-exp 'a₁]]
      [#return-seq [#var-c-exp 'b₁]]]]]]

select-instructions:

  [#cons-x86-mod
   [:locals [:a₁ #int-type :b₁ #int-type]]
   [:begin
    [#cons-block
     []
     [['movq [[#imm-rand 42] [#var-rand 'a₁]]]
      ['movq [[#var-rand 'a₁] [#var-rand 'b₁]]]
      ['movq [[#var-rand 'b₁] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

uncover-live:

  [#cons-x86-mod
   [:locals [:a₁ #int-type :b₁ #int-type]]
   [:begin
    [#cons-block
     [:block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand 'a₁] [#reg-rand 'rsp]}
       {[#var-rand 'b₁] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]]
     [['movq [[#imm-rand 42] [#var-rand 'a₁]]]
      ['movq [[#var-rand 'a₁] [#var-rand 'b₁]]]
      ['movq [[#var-rand 'b₁] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

build-interference:

  [#cons-x86-mod
   [:locals [:a₁ #int-type :b₁ #int-type]
    :interference-graph
    [#cons-graph
     {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
     (@hash
       [#var-rand 'a₁] {[#reg-rand 'rsp]}
       [#var-rand 'b₁] {[#reg-rand 'rsp]}
       [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]}
       [#reg-rand 'rax] {[#reg-rand 'rsp]})]]
   [:begin
    [#cons-block
     [:block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand 'a₁] [#reg-rand 'rsp]}
       {[#var-rand 'b₁] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]]
     [['movq [[#imm-rand 42] [#var-rand 'a₁]]]
      ['movq [[#var-rand 'a₁] [#var-rand 'b₁]]]
      ['movq [[#var-rand 'b₁] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

allocate-registers:

  [#cons-x86-mod
   [:home-locations
    (@hash [#var-rand 'a₁] [#reg-rand 'rcx] [#var-rand 'b₁] [#reg-rand 'rcx])
    :spill-count 0
    :callee-saved []
    :locals [:a₁ #int-type :b₁ #int-type]
    :interference-graph
    [#cons-graph
     {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
     (@hash
       [#var-rand 'a₁] {[#reg-rand 'rsp]}
       [#var-rand 'b₁] {[#reg-rand 'rsp]}
       [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]}
       [#reg-rand 'rax] {[#reg-rand 'rsp]})]]
   [:begin
    [#cons-block
     [:block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand 'a₁] [#reg-rand 'rsp]}
       {[#var-rand 'b₁] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]]
     [['movq [[#imm-rand 42] [#var-rand 'a₁]]]
      ['movq [[#var-rand 'a₁] [#var-rand 'b₁]]]
      ['movq [[#var-rand 'b₁] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

assign-homes:

  [#cons-x86-mod
   [:home-locations
    (@hash [#var-rand 'a₁] [#reg-rand 'rcx] [#var-rand 'b₁] [#reg-rand 'rcx])
    :spill-count 0
    :callee-saved []
    :locals [:a₁ #int-type :b₁ #int-type]
    :interference-graph
    [#cons-graph
     {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
     (@hash
       [#var-rand 'a₁] {[#reg-rand 'rsp]}
       [#var-rand 'b₁] {[#reg-rand 'rsp]}
       [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]}
       [#reg-rand 'rax] {[#reg-rand 'rsp]})]]
   [:begin
    [#cons-block
     [:block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand 'a₁] [#reg-rand 'rsp]}
       {[#var-rand 'b₁] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]]
     [['movq [[#imm-rand 42] [#reg-rand 'rcx]]]
      ['movq [[#reg-rand 'rcx] [#reg-rand 'rcx]]]
      ['movq [[#reg-rand 'rcx] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

patch-instructions:

  [#cons-x86-mod
   [:home-locations
    (@hash [#var-rand 'a₁] [#reg-rand 'rcx] [#var-rand 'b₁] [#reg-rand 'rcx])
    :spill-count 0
    :callee-saved []
    :locals [:a₁ #int-type :b₁ #int-type]
    :interference-graph
    [#cons-graph
     {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
     (@hash
       [#var-rand 'a₁] {[#reg-rand 'rsp]}
       [#var-rand 'b₁] {[#reg-rand 'rsp]}
       [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]}
       [#reg-rand 'rax] {[#reg-rand 'rsp]})]]
   [:begin
    [#cons-block
     [:block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand 'a₁] [#reg-rand 'rsp]}
       {[#var-rand 'b₁] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]]
     [['movq [[#imm-rand 42] [#reg-rand 'rcx]]]
      ['movq [[#reg-rand 'rcx] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]]]

prolog-and-epilog:

  [#cons-x86-mod
   [:home-locations
    (@hash [#var-rand 'a₁] [#reg-rand 'rcx] [#var-rand 'b₁] [#reg-rand 'rcx])
    :spill-count 0
    :callee-saved []
    :locals [:a₁ #int-type :b₁ #int-type]
    :interference-graph
    [#cons-graph
     {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rsp] [#reg-rand 'rax]}
     (@hash
       [#var-rand 'a₁] {[#reg-rand 'rsp]}
       [#var-rand 'b₁] {[#reg-rand 'rsp]}
       [#reg-rand 'rsp] {[#var-rand 'a₁] [#var-rand 'b₁] [#reg-rand 'rax]}
       [#reg-rand 'rax] {[#reg-rand 'rsp]})]]
   [:begin
    [#cons-block
     []
     [['pushq [[#reg-rand 'rbp]]]
      ['movq [[#reg-rand 'rsp] [#reg-rand 'rbp]]]
      [#jmp 'begin.body]]]
    :begin.body
    [#cons-block
     [:block-live-before-set {[#reg-rand 'rsp]}
      :live-after-sets
      [{[#var-rand 'a₁] [#reg-rand 'rsp]}
       {[#var-rand 'b₁] [#reg-rand 'rsp]}
       {[#reg-rand 'rsp] [#reg-rand 'rax]}
       {}]]
     [['movq [[#imm-rand 42] [#reg-rand 'rcx]]]
      ['movq [[#reg-rand 'rcx] [#reg-rand 'rax]]]
      [#jmp 'begin.epilog]]]
    :begin.epilog [#cons-block [] [['popq [[#reg-rand 'rbp]]] #retq]]]]

